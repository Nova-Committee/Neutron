buildscript {
    repositories {
        mavenCentral()
        maven {
            url = "https://jcenter.bintray.com/"
        }
        maven {
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath('com.anatawa12.forge:ForgeGradle:1.2-1.0.+') {
            changing = true
        }
    }
}

configurations {
    embed
    compile.extendsFrom(embed)
}

apply plugin: 'scala'
apply plugin: 'forge'
apply plugin: 'idea'

version = "${version}"
group = "${group}" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "${jarName}"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.7'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

minecraft {
    version = "1.7.10-10.13.4.1614-1.7.10"
    runDir = "idea"
}

repositories {
    maven { url 'https://jitpack.io' }
    maven { url 'https://maven.nova-committee.cn/releases' }
    maven { url "https://cursemaven.com" }
}

dependencies {
    embed("committee.nova:sjl10n-scala:1.0.0") {
        exclude module: 'scala-library'
        exclude module: 'scala-reflect'
        exclude module: 'log4j-api'
        exclude module: 'log4j-core'
        exclude module: 'commons-io'
        exclude module: 'commons-lang3'
        exclude module: 'gson'
        exclude module: 'guava'
    }
    embed('committee.nova:DateUtils:1.0.0')
    implementation('com.github.Nova-Committee:Proton:Forge-1.7.10-0.0.2')
    compileOnly("curse.maven:worldborder-forge-233231:2266362")
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task sourceJar(type: Jar) {
    from sourceSets.main.allSource
}


jar {
    from configurations.embed.collect {
        exclude '**/LICENSE.txt'
        it.isDirectory() ? it : zipTree(it)
    }
    manifest {
        attributes 'FMLAT': 'neutron_at.cfg'
    }
}